---
- hosts: docker-host
  gather_facts: false
  become: yes
  vars:
    ansible_user: "{{ login_user}}"
    mddo_containerlab_file: "configs/clab-topo.yml"
    nodered_url: "http://192.168.80.2:1880"
    ansible_python_interpreter: /usr/bin/python3
    operation: create
    ansible_runner_dir: ""
    playground_dir: ""
    model_merge_dir: ""
    demo_dir: "{{ playground_dir }}/configs/{{ network_name }}"
  tasks:
    - name: mddo_toolbox.rb convert_namespace
      shell: "docker-compose run netomox-exp  bundle exec ./exe/mddo_toolbox.rb convert_namespace -f json -t ns_table.json -o  /mddo/netoviz_model/{{ network_name }}/original_asis/topology.json > {{ playground_dir }}/netoviz_model/{{ network_name }}/emulated_asis/topology.json"
      args:
        chdir: "{{ playground_dir }}"

    - name: get original_asis
      shell: "curl {{ netoviz_url }}/model/{{ network_name }}/original_asis/topology.json > {{ demo_dir }}/original_asis/topology.json"
      args:
        chdir: "{{ demo_dir }}"

    - name: get emulated_asis
      shell: "curl -X 'POST' '{{ nodered_url }}/description/batfish' -H 'accept: application/json' -H 'Content-Type: application/json' --data @{{ demo_dir }}/original_asis/topology.json | jq .  > {{ demo_dir }}/emulated_asis/convert.json"
      args:
        chdir: "{{ demo_dir }}"

    - name: convert emulated_asis topology
      shell: "python3.10 project/update_topology.py {{ demo_dir }}/emulated_asis/convert.json {{ playground_dir }}/netoviz_model/{{ network_name }}/emulated_asis/topology.json"
      args:
        chdir: "{{ ansible_runner_dir }}"

    - name: backup emulated_asis topology
      shell: "cp topology.json backup_topology.json"
      args:
        chdir: "{{ playground_dir }}/netoviz_model/{{ network_name }}/emulated_asis"

    - name: "get emulated asis data"
      uri:
        url: "{{ netoviz_url }}/model/{{network_name}}/emulated_asis/topology.json"
        method: "GET"
      register: emulated_asis

    - set_fact:
       topology: "{{ emulated_asis.json }}"

    - name: "get nodered convert data"
      uri:
        url: "{{ nodered_url }}/convertif/eth"
        method: "POST"
        body: "{{ topology }}"
        body_format: json
      register: result_node
#
    - name: "create ovs-br {{ item.node.clab }}"
      shell: "ovs-vsctl del-br {{ item.node.clab | community.general.crc32 }}"
      when: '"Seg" in item.node.clab'
      loop: "{{ result_node.json }}"
      ignore_errors: True

    - name: "create ovs-br {{ item.node.clab }}"
      shell: "ovs-vsctl add-br {{ item.node.clab | community.general.crc32 }}"
      when: '"Seg" in item.node.clab'
      loop: "{{ result_node.json }}"
      ignore_errors: True

- hosts: localhost
  connection: local
  gather_facts: no
  vars:
    nodes: {}
    containerlab: []
    convertif: []
    bridge_image:
      kind: ovs-bridge
    cnf_image:
      kind: 'juniper_crpd'
      image: 'crpd:22.1R1.10'
    mddo_model_file: "/data/project/playbooks/pushed_configs_mddo_network.json"
    nodered_url: "http://192.168.80.2:1880"
    node_list: []
    node: {}
    node_dicts: {}
    node_dict: {}
    network_name: "mddo-ospf"
    netoviz_url: "http://localhost:3000"
    labname: "mddo-lab"
    containerlab_host: "172.17.0.1"
    demo_dir: ""
    mddo_containerlab_file: "configs/clab-topo.yml"

  tasks:
    - name: "get original asis data"
      uri:
        url: "{{ netoviz_url }}/model/{{network_name}}/original_asis/topology.json"
        method: "GET"
      register: original_asis

    - name: "get emulated asis data"
      uri:
        url: "{{ netoviz_url }}/model/{{network_name}}/emulated_asis/topology.json"
        method: "GET"
      register: emulated_asis


    - name: create playbooks/configs directory
      shell: mkdir -p configs
  
    - include_tasks: 
        file: "/data/project/playbooks/sub_generate_topo.yml"
#
    - include_tasks: 
        file: "/data/project/playbooks/sub_generate_config.yml"
#
- hosts: docker-host
  gather_facts: false
  become: yes
  vars:
    ansible_user: "{{ login_user}}"
    mddo_containerlab_file: "configs/clab-topo.yml"
    ansible_python_interpreter: /usr/bin/python3
    operation: create
#
  tasks:
    - include_tasks: 
        file: "/data/project/playbooks/sub_mddo_containerlab.yml"
 
