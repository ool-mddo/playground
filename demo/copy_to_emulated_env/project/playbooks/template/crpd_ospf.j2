protocols {
    ospf {
        area {{ ospf_list.json[0]["attribute"]["identifier"] }} {
{% for interface in item.interfaces %}
            interface {{ interface.alias.l1_principal }} {
                metric {{ interface.attribute.metric }};
{% if interface.attribute.passive %}
                passive;
{% endif %}
{% if "POINT_TO_POINT" in interface.attribute["network-type"] %}
                interface-type p2p;
{% endif %}
                priority {{ interface.attribute.priority }};
                hello-interval {{ interface.attribute.timer["hello-interval"] }};
                dead-interval {{ interface.attribute.timer["dead-interval"] }};
            }
{% endfor  %}
        }
{% if  item.attribute.redistribute | length != 0 %}
        export ospf-redistribute;
{% endif %}
    }
}
{% if  item.attribute.redistribute | length != 0 %}
policy-options {
    policy-statement ospf-redistribute {
        from protocol [ {{ item.attribute.redistribute | json_query('[*].protocol') | join(' ') | regex_replace('connected', 'direct') }} ];
        then accept;
    }
}
{% endif %}
{#
        from protocol [ {{ item.attributes.redistribute | json_query('[*].protocol') | join(' ') | regex_replace('connected', 'direct') }} ];
#}
