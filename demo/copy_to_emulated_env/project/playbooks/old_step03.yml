---
- hosts: docker-host
  gather_facts: false
  become: yes
  vars:
    mddo_model_file: "/data/project/playbooks/pushed_configs_mddo_network.json"
    nodered_url: "http://192.168.80.2:1880"
    network_name: "mddo-ospf"
    netoviz_url: "http://localhost:3000"
    labname: "mddo-lab"
    containerlab_host: "172.17.0.1"
    ansible_user: "{{ login_user}}"
    mddo_containerlab_file: "configs/clab-topo.yml"
    ansible_python_interpreter: /usr/bin/python3
    ansible_runner_dir: ""
    playground_dir: ""
    model_merge_dir: ""
    demo_dir: "{{ playground_dir }}/configs/{{ network_name }}"
    operation: save
  pre_tasks:
    - name: Get ansible_user home directory
      shell: 'getent passwd "{{ansible_ssh_user}}" | cut -d: -f6'
      register: ansible_home_result

    - name: Set the fact for the other scripts to use
      set_fact: ansible_home='{{ansible_home_result.stdout}}'

  tasks:
    - include_tasks: 
        file: "/data/project/playbooks/sub_mddo_containerlab.yml"

    - name: "cleaning dir"
      shell: "rm -rf {{ demo_dir }}/emulated_tobe/configs/*"

    - name: "cleaning dir"
      shell: "rm -rf {{ demo_dir }}/emulated_tobe/hosts/*"
      register: result

    - name: "cleaning dir"
      shell: "cp playbooks/configs/Seg*conf {{ demo_dir }}/emulated_tobe/configs/"
      args:
        chdir: "{{ ansible_runner_dir }}/project"

    - name: "get original_asis topology data"
      uri:
        url: "{{ netoviz_url }}/model/{{ network_name }}/original_asis/topology.json"
        method: "GET"
      register: result_node

    - name: "get nodered convert data"
      uri:
        url: "http://localhost:1880/batfish_l1topo"
        method: "POST"
        body: "{{ result_node.json }}"
        body_format: json
      register: result

    - name: copy emulated_tobe config from containerlab config
      shell: "find  {{ ansible_home }}/clab-{{ labname }}/*/config  -name juniper.conf | rev | cut -d '/' -f 3 | rev  | xargs -INAME bash -c 'cat {{ ansible_home }}/clab-{{ labname }}/NAME/config/juniper.conf > NAME.conf'"
      args:
        chdir: "{{ demo_dir }}/emulated_tobe/configs"

    - name: execute netomox-exp
      shell: "docker-compose run netomox-exp bundle exec rake NETWORK={{ network_name }}  PHY_SS_ONLY=1"
      args:
        chdir: "{{ playground_dir }}"

    - name: restore emulated_asis topology
      shell: "mv backup_topology.json topology.json"
      args:
        chdir: "{{ playground_dir }}/netoviz_model/{{ network_name }}/emulated_asis/"

    - name: execute netomox-exp
      shell: "docker-compose run netomox-exp bundle exec rake NETWORK={{ network_name }}  PHY_SS_ONLY=1 emulated_ss_diff"
      args:
        chdir: "{{ playground_dir }}"

    - name: execute netomox-exp
      shell: "docker-compose run netomox-exp bundle exec ./exe/mddo_toolbox.rb filter_low_layers -f json /mddo/netoviz_model/{{ network_name }}/emulated_tobe/topology.json > ./netoviz_model/{{ network_name }}/emulated_tobe/emulated_tobe_filtered.json "
      args:
        chdir: "{{ playground_dir }}"
    - name: execute netomox-exp
      shell: "docker-compose run netomox-exp bundle exec netomox diff -c /mddo/netoviz_model/{{ network_name }}/emulated_asis/topology.json /mddo/netoviz_model/{{ network_name }}/emulated_tobe/emulated_tobe_filtered.json"
      args:
        chdir: "{{ playground_dir }}"
