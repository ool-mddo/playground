---
    - name: "get emulated asis data"
      uri:
        url: "http://localhost:3000/model/{{network_name}}/emulated_asis/topology.json"
        method: "GET"
      register: emulated_asis

    - set_fact:
       topology: "{{ emulated_asis.json }}"

    - name: "get nodered convert link"
      uri:
        url: "http://localhost:1880/convertlink"
        method: "POST"
        body: "{{ topology }}"
        body_format: json
      register: result_link

    - name: "get nodered convert data"
      uri:
        url: "http://localhost:1880/convertif/eth"
        method: "POST"
        body: "{{ topology }}"
        body_format: json
      register: result_node

    - copy:
        src: "configs/{{ item.node.clab }}.conf"
        dest: "/tmp/{{ item.node.clab }}.conf"
      loop: "{{ result_node.json }}"
      when: 'operation == "create"'
      ignore_errors: True

    - name:
      set_fact:
        containerlab: "{{lookup('file', mddo_containerlab_file)  | from_yaml }}"

#    - copy:
#        src: "configs/{{ item.key | regex_replace('\\-$', '') }}.conf"
#        dest: "/tmp/{{ item.key  | regex_replace('\\-$', '') }}.conf"
#      loop: "{{ containerlab.topology.nodes | dict2items }}"
#      when: 'operation == "create"'
#      ignore_errors: True


    - name: Creating clab-topo.yml 
      copy:
        dest: "/tmp/clab-topo.yml"
        content: "{{ containerlab | to_yaml }}"

    - name: deploy containerlab
      command:
        cmd: "containerlab deploy --topo /tmp/clab-topo.yml"
      when: operation == 'create'

    - name: destroy containerlab
      command:
        cmd: "containerlab destroy --topo /tmp/clab-topo.yml"
      when: operation == 'delete'

    - name: save config from  containerlab
      command:
        cmd: "containerlab save --topo /tmp/clab-topo.yml"
      when: operation == 'create' or operation == 'save'

