---
- hosts: docker-host
  gather_facts: false
  become: yes
  vars:
    ansible_user: "{{ login_user}}"
    ansible_python_interpreter: /usr/bin/python3
    gen_iperf_command: project/playbooks/{{ usecase_common_name }}/generate_iperf_command.py
    flow_data: project/playbooks/{{ usecase_name }}/flowdata.csv
    static_route_data: project/playbooks/configs/static-route.yaml
    iperf_params_data_runner: configs/iperf_params.json # in runner container path (origin: this playbook dir)
    iperf_params_data: project/playbooks/configs/iperf_params.json # in remote host path

  tasks:
  - name: "get converted topology data"
    uri:
      url: "http://localhost:15000/topologies/{{ network_name }}/emulated_asis/topology"
      method: "GET"
      body_format: json
    register: topology

  - name: generate iperf command parameter
    shell:
      cmd: "python3 {{ gen_iperf_command }} {{ flow_data }} {{ static_route_data }} > {{ iperf_params_data }}"
    args:
      chdir: "{{ ansible_runner_dir }}"

  - name: iperf server command
    debug:
      msg: '{{ exec_container }} /bin/bash -c "nohup iperf3 -s -p {{ item.1.number }} > out_{{ item.1.number }}.log &"'
    vars:
      exec_container: "sudo containerlab inspect --all --format json | jq '.containers[] | select( .name | contains (\"{{ item.0['node'] }}\")) | .name' | xargs -ICONTAINER docker exec CONTAINER "
    with_subelements:
      - "{{ lookup('file', iperf_params_data_runner) }}"
      - port

  - name: iperf server command
    shell:
      cmd: '{{ exec_container }} /bin/bash -c "nohup iperf3 -s -p {{ item.1.number }} > out_{{ item.1.number }}.log 2>&1 &"'
    vars:
      exec_container: "sudo containerlab inspect --all --format json | jq '.containers[] | select( .name | contains (\"{{ item.0['node'] }}\")) | .name' | xargs -ICONTAINER docker exec CONTAINER "
    with_subelements:
      - "{{ lookup('file', iperf_params_data_runner) }}"
      - port

  - name: iperf client command
    debug:
      msg: '{{ exec_container }} /bin/bash -c "nohup iperf3 -t 0 -c {{ item.1["dest_address"] }} -b {{ item.1.rate | int }}K -p {{ item.1.number }} > out_{{ item.0.node }}.log &"'
    vars:
      exec_container: "sudo containerlab inspect --all --format json | jq '.containers[] | select( .name | contains (\"{{ item.1['source'] }}\")) | .name' | xargs -ICONTAINER docker exec CONTAINER "
    with_subelements:
      - "{{ lookup('file', iperf_params_data_runner) }}"
      - port

  - name: iperf client command
    shell:
      cmd: '{{ exec_container }} /bin/bash -c "nohup iperf3 -t 0 -c {{ item.1["dest_address"] }} -b {{ item.1.rate | int }}K -p {{ item.1.number }} > out_{{ item.0.node }}.log 2>&1 &"'
    vars:
      exec_container: "sudo containerlab inspect --all --format json | jq '.containers[] | select( .name | contains (\"{{ item.1['source'] }}\")) | .name' | xargs -ICONTAINER docker exec CONTAINER "
    with_subelements:
      - "{{ lookup('file', iperf_params_data_runner) }}"
      - port

