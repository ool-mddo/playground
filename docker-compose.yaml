---
services:
  ansible-eda:
    build:
      context: ansible-eda
      dockerfile: Dockerfile
    ports:
      - target: 48080
        published: 48081
    volumes:
      - type: bind
        source: ./demo/candidate_model_ops/project/playbooks
        target: /playbooks
      - type: bind
        source: ./ansible-eda
        target: /eda
      #- type: bind
      #  source: ./demo/candidate_model_ops/clab
      #  target: /clab
    command: ["ansible-rulebook","-r","/eda/rulebook.yaml","-i","/eda/hosts","-vvvv"]

  api-proxy:
    image: ${API_PROXY_IMAGE}:${API_PROXY_IMAGE_TAG}
    volumes:
      - type: bind
        source: ./assets/api-proxy/default.conf
        target: /etc/nginx/conf.d/default.conf
    ports:
      - target: 80
        published: ${API_PROXY_PUB_PORT}
    depends_on:
      - model-conductor
      - netomox-exp
      - batfish-wrapper
      - fish-tracer

  batfish:
    image: ${BATFISH_IMAGE}:${BATFISH_IMAGE_TAG}
    volumes:
      - type: bind
        source: ./assets/batfish/log4j2.yaml
        target: /log4j2.yaml

  netomox-exp:
    image: ${NETOMOX_EXP_IMAGE}:${NETOMOX_EXP_IMAGE_TAG}
    tty: true  # for rerun (requires console input)
    environment:
      BATFISH_WRAPPER_HOST: batfish-wrapper:${BATFISH_WRAPPER_PORT}
      NETOMOX_LOG_LEVEL: ${NETOMOX_LOG_LEVEL}
      NETOMOX_EXP_LOG_LEVEL: ${NETOMOX_EXP_LOG_LEVEL}
      MDDO_QUERIES_DIR: ${MDDO_QUERIES_DIR}
      MDDO_TOPOLOGIES_DIR: ${MDDO_TOPOLOGIES_DIR}
      MDDO_USECASES_DIR: ${MDDO_USECASES_DIR}
    volumes:
      # data dirs
      - type: volume
        source: queries
        target: ${MDDO_QUERIES_DIR}
        read_only: true
      - type: volume
        source: toplogies
        target: ${MDDO_TOPOLOGIES_DIR}
      - type: volume
        source: usecases
        target: ${MDDO_USECASES_DIR}
      # for development
      - type: bind
        source: ./repos/netomox-exp/lib
        target: /netomox-exp/lib
      - type: bind
        source: ./repos/netomox-exp/app.rb
        target: /netomox-exp/app.rb
      - type: bind
        source: ./repos/netomox-exp/config.ru
        target: /netomox-exp/config.ru
    depends_on:
      - batfish-wrapper

  batfish-wrapper:
    image: ${BATFISH_WRAPPER_IMAGE}:${BATFISH_WRAPPER_IMAGE_TAG}
    environment:
      BATFISH_HOST: batfish
      BATFISH_WRAPPER_PYBATFISH_LOG_LEVEL: ${BATFISH_WRAPPER_PYBATFISH_LOG_LEVEL}
      BATFISH_WRAPPER_LOG_LEVEL: ${BATFISH_WRAPPER_LOG_LEVEL}
      MDDO_CONFIGS_DIR: ${MDDO_CONFIGS_DIR}
      MDDO_QUERIES_DIR: ${MDDO_QUERIES_DIR}
      MDDO_GIT_ALLOWED_CONFIGS_REPOSITORY: ${MDDO_CONFIGS_DIR}/pushed_configs
      PYTHONUNBUFFERED: 1
    volumes:
      # data dirs
      - type: bind
        source: ./.git
        target: ${MDDO_DIR}/.git  # git dir of under CONFIGS_DIR submodules
      - type: volume
        source: configs
        target: ${MDDO_CONFIGS_DIR}
      - type: volume
        source: queries
        target: ${MDDO_QUERIES_DIR}
      # for development
      - type: bind
        source: ./repos/batfish-wrapper
        target: /batfish-wrapper
    depends_on:
      - batfish

  bgp-policy-parser:
    image: ${BGP_POLICY_PARSER_IMAGE}:${BGP_POLICY_PARSER_IMAGE_TAG}
    tty: true
    environment:
      MODEL_CONDUCTOR_HOST: model-conductor:${MODEL_CONDUCTOR_PORT}
      MDDO_CONFIGS_DIR: ${MDDO_CONFIGS_DIR}
      MDDO_QUERIES_DIR: ${MDDO_QUERIES_DIR}
      MDDO_TTP_CONFIGS_DIR: ${MDDO_TTP_CONFIGS_DIR}
      MDDO_TTP_OUTPUTS_DIR: ${MDDO_TTP_OUTPUTS_DIR}
      MDDO_BGP_POLICIES_DIR: ${MDDO_BGP_POLICIES_DIR}
      PYTHONUNBUFFERED: 1
    volumes:
      # data dirs
      - type: volume
        source: configs
        target: ${MDDO_CONFIGS_DIR}
        read_only: true
      - type: volume
        source: queries
        target: ${MDDO_QUERIES_DIR}
        read_only: true
      - type: volume
        source: ttp
        target: ${MDDO_TTP_DIR}
      # for development
      - type: bind
        source: ./repos/bgp-policy-parser
        target: /bgp-policy-parser

  model-conductor:
    image: ${MODEL_CONDUCTOR_IMAGE}:${MODEL_CONDUCTOR_IMAGE_TAG}
    environment:
      BATFISH_WRAPPER_HOST: batfish-wrapper:${BATFISH_WRAPPER_PORT}
      NETOMOX_EXP_HOST: netomox-exp:${NETOMOX_EXP_PORT}
      MODEL_CONDUCTOR_LOG_LEVEL: ${MODEL_CONDUCTOR_LOG_LEVEL}
    tty: true  # for rerun (requires console input)
    volumes:
      # for development
      - type: bind
        source: ./repos/model-conductor/app.rb
        target: /model-conductor/app.rb
      - type: bind
        source: ./repos/model-conductor/config.ru
        target: /model-conductor/config.ru
      - type: bind
        source: ./repos/model-conductor/lib
        target: /model-conductor/lib
    depends_on:
      - batfish-wrapper
      - netomox-exp

  netoviz:
    image: ${NETOVIZ_IMAGE}:${NETOVIZ_IMAGE_TAG}
    ports:
      - target: 3000
        published: 3000
    environment:
      MDDO_TOPOLOGIES_DIR: /netoviz/static/model
    volumes:
      # data dirs
      - type: volume
        source: toplogies
        target: /netoviz/static/model
      # for development
      - type: bind
        source: ./repos/netoviz/components
        target: /netoviz/components
      - type: bind
        source: ./repos/netoviz/layouts
        target: /netoviz/layouts
      - type: bind
        source: ./repos/netoviz/nuxt.config.js
        target: /netoviz/nuxt.config.js
      - type: bind
        source: ./repos/netoviz/lib
        target: /netoviz/lib
      - type: bind
        source: ./repos/netoviz/pages
        target: /netoviz/pages
      - type: bind
        source: ./repos/netoviz/server
        target: /netoviz/server
      - type: bind
        source: ./repos/netoviz/static
        target: /netoviz/static
      - type: bind
        source: ./repos/netoviz/store
        target: /netoviz/store

  fish-tracer:
    image: ${FISH_TRACER_IMAGE}:${FISH_TRACER_IMAGE_TAG}
    environment:
      BASE_URL: http://${FISH_TRACER_BASE_HOST}:${API_PROXY_PUB_PORT}
    volumes:
      # for development
      - type: bind
        source: ./repos/fish-tracer/components
        target: /fish-tracer/components
      - type: bind
        source: ./repos/fish-tracer/nuxt.config.js
        target: /fish-tracer/nuxt.config.js
      - type: bind
        source: ./repos/fish-tracer/pages
        target: /fish-tracer/pages
      - type: bind
        source: ./repos/fish-tracer/static
        target: /fish-tracer/static
      - type: bind
        source: ./repos/fish-tracer/store
        target: /fish-tracer/store
    depends_on:
      - batfish-wrapper

networks:
  default:
    ipam:
      config:
        - subnet: 172.16.254.0/24

volumes:
  configs:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./${SHARED_CONFIGS_DIR}
  queries:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./${SHARED_QUERIES_DIR}
  toplogies:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./${SHARED_TOPOLOGIES_DIR}
  ttp:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./${SHARED_TTP_DIR}
  usecases:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./${SHARED_USECASES_DIR}
